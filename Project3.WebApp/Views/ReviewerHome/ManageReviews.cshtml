@* Define the model type this view expects. *@
@model List<Project3.Shared.Models.InputModels.ReviewViewModel>

@{
    ViewData["Title"] = "Manage My Reviews";
    Layout = "~/Views/Shared/_AppLayout.cshtml";
}

<div class="welcome-section">
    <h1 class="display-5">@ViewData["Title"]</h1>
    <p class="lead text-muted">View and manage all your restaurant reviews</p>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i> @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="card shadow-sm mb-4">
    <div class="card-body">
        @* Check if the Model exists and has items before trying to display the table *@
        @if (Model != null && Model.Any())
        {
            <p>Here are the reviews you have written:</p>
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Restaurant</th>
                            <th>Ratings</th>
                            <th>Visit Date</th>
                            <th>Comment</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var review in Model)
                        {
                            <tr>
                                <td>
                                    <a asp-controller="Restaurant" asp-action="Details" asp-route-id="@review.RestaurantID" class="fw-bold text-decoration-none">
                                        @review.RestaurantName
                                    </a>
                                </td>
                                <td>
                                    <div class="review-ratings">
                                        <div class="rating-item">
                                            <span class="rating-label">Food:</span>
                                            <div class="rating-stars">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <i class="fas fa-star @(i <= review.FoodQualityRating ? "text-warning" : "text-muted")"></i>
                                                }
                                            </div>
                                        </div>
                                        <div class="rating-item">
                                            <span class="rating-label">Service:</span>
                                            <div class="rating-stars">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <i class="fas fa-star @(i <= review.ServiceRating ? "text-warning" : "text-muted")"></i>
                                                }
                                            </div>
                                        </div>
                                        <div class="rating-item">
                                            <span class="rating-label">Atmosphere:</span>
                                            <div class="rating-stars">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <i class="fas fa-star @(i <= review.AtmosphereRating ? "text-warning" : "text-muted")"></i>
                                                }
                                            </div>
                                        </div>
                                        <div class="rating-item">
                                            <span class="rating-label">Price:</span>
                                            <div class="rating-stars">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <i class="fas fa-star @(i <= review.PriceRating ? "text-warning" : "text-muted")"></i>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td>@review.VisitDate.ToString("MMM d, yyyy")</td>
                                <td class="comment-cell">
                                    @if (!string.IsNullOrEmpty(review.Comments) && review.Comments.Length > 100)
                                    {
                                        <div class="comment-text">
                                            @review.Comments.Substring(0, 100)<span>...</span>
                                            <a href="#" class="view-full-comment" data-bs-toggle="modal" data-bs-target="#commentModal"
                                               data-comment="@review.Comments" data-restaurant="@review.RestaurantName">
                                               View full comment
                                            </a>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="comment-text">@review.Comments</div>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-controller="Review" asp-action="Edit" asp-route-id="@review.ReviewID" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                        <a asp-controller="Review" asp-action="Delete" 
                                           asp-route-id="@review.ReviewID" 
                                           asp-route-restaurantId="@review.RestaurantID"
                                           class="btn btn-sm btn-outline-danger"
                                           onclick="return confirm('Are you sure you want to delete this review? This action cannot be undone.');">
                                            <i class="fas fa-trash"></i> Delete
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-info">
                <i class="fas fa-info-circle me-2"></i> You haven't written any reviews yet.
            </div>
            <div class="text-center mt-4">
                <a asp-controller="Restaurant" asp-action="Index" class="btn btn-primary">
                    <i class="fas fa-search me-2"></i> Find Restaurants to Review
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Set up the comment modal
        document.addEventListener('DOMContentLoaded', function() {
            const commentModal = document.getElementById('commentModal');
            if (commentModal) {
                commentModal.addEventListener('show.bs.modal', function(event) {
                    // Button that triggered the modal
                    const button = event.relatedTarget;
                    
                    // Extract info from data attributes
                    const comment = button.getAttribute('data-comment');
                    const restaurant = button.getAttribute('data-restaurant');
                    
                    // Update the modal content
                    const modalTitle = commentModal.querySelector('.modal-title');
                    const modalBody = commentModal.querySelector('.modal-body');
                    
                    modalTitle.textContent = 'Review for ' + restaurant;
                    modalBody.textContent = comment;
                });
            }
        });
    </script>
}

@section Styles {
    <style>
        .review-ratings {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }
        
        .rating-item {
            display: flex;
            align-items: center;
            font-size: 0.85rem;
        }
        
        .rating-label {
            width: 80px;
            color: #666;
        }
        
        .rating-stars {
            display: inline-flex;
            gap: 2px;
        }
        
        .text-warning {
            color: #ffc107 !important; /* Gold/yellow color for filled stars */
        }
        
        .text-muted {
            color: #d3d3d3 !important; /* Light gray for empty stars */
        }
        
        .comment-cell {
            max-width: 300px;
        }
        
        .comment-text {
            white-space: normal;
            word-break: break-word;
        }
        
        .view-full-comment {
            display: block;
            margin-top: 5px;
            font-size: 0.85rem;
        }
        
        /* Make the table rows more readable */
        .table-striped > tbody > tr:nth-of-type(odd) {
            background-color: rgba(0, 0, 0, 0.02);
        }
        
        .table-hover > tbody > tr:hover {
            background-color: rgba(0, 123, 255, 0.05);
        }
    </style>
}

<!-- Modal for displaying full comment -->
<div class="modal fade" id="commentModal" tabindex="-1" aria-labelledby="commentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="commentModalLabel">Review Comment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Comment text will be inserted here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
